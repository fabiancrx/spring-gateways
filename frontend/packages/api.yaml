openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080/api
  description: Generated server url
paths:
  /{id}:
    put:
      tags:
      - peripheral-controller
      operationId: edit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peripheral'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - peripheral-controller
      operationId: deletePeripheral
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /gateways/{id}:
    get:
      tags:
      - gateway-controller
      operationId: read
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Gateway'
    put:
      tags:
      - gateway-controller
      operationId: edit_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - gateway-controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /:
    post:
      tags:
      - peripheral-controller
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeripheralUpdateModel'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /gateways:
    get:
      tags:
      - gateway-controller
      operationId: browse
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SliceGateway'
    post:
      tags:
      - gateway-controller
      operationId: add_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /status:
    get:
      tags:
      - musal-application
      operationId: status
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /gateways/{id}/peripherals:
    get:
      tags:
      - gateway-controller
      operationId: browse_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peripheral'
components:
  schemas:
    Peripheral:
      required:
      - vendor
      type: object
      properties:
        id:
          type: integer
          format: int64
        vendor:
          type: string
        status:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        created:
          type: string
          format: date-time
    Gateway:
      required:
      - name
      - serialNumber
      type: object
      properties:
        id:
          type: integer
          format: int64
        serialNumber:
          type: string
        name:
          type: string
        ipv4:
          type: string
          description: Must be a valid IPv4 address
        peripherals:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Peripheral'
      description: Master devices that control multiple peripheral devices
    PeripheralUpdateModel:
      required:
      - vendor
      type: object
      properties:
        id:
          type: integer
          format: int64
        vendor:
          type: string
        status:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        created:
          type: string
          format: date-time
        gatewayId:
          type: integer
          format: int32
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SliceGateway:
      type: object
      properties:
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Gateway'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
